import React, { useEffect, useState } from 'react';
import Container from 'react-bootstrap/Container';
import Row from 'react-bootstrap/Row';
import Col from 'react-bootstrap/Col';
import Form from 'react-bootstrap/Form';
import axios from 'axios';
import { Box, Text, Picker, Page, useNavigate } from "zmp-ui";

const Cart = () => {
    const [cities,setCities] = useState('')
    const [districts,setDistricts] = useState('')
    const [city,setCity] = useState('')
    const [district,setDistrict] = useState('')
    const [cityURL,setCityURL] = useState('')
    const [mounted,setMounted] = useState(false)
    const [payMethod, setPayMethod] = useState('cod')

    const navigate = useNavigate();

    useEffect(() => {
        if(mounted != true ){
            var data = [];
            axios({
                method: 'get',
                headers: {
                    'Content-Type': 'application/json',
                },
                baseURL: 'https://cdn.jsdelivr.net/gh/thien0291/vietnam_dataset@1.0.0/Index.json',
                })
            .then(function (response) {
                for (const [key, value] of Object.entries(response['data'])) {
                    data.push({
                        value: value['code'],
                        displayName: key,
                        path: value['file_path'],
                        });
                    }
            }).catch(function (error){
                console.log(error);
            })
            setCities(data);
            setMounted(true)
        }
        
    },[])

    useEffect(() => {
        let URL = cityURL.slice(1)
        var data = [];
        
        if(cities && cityURL){
            axios({
                method: 'get',
                headers: {
                    'Content-Type': 'application/json',
                },
                baseURL: `https://cdn.jsdelivr.net/gh/thien0291/vietnam_dataset@1.0.0${URL}`,
                })
            .then( function (response) {
                for (const [key, value] of Object.entries(response['data']['district'])) {
                    data.push({
                        value: key,
                        displayName: value['name'],
                        });
                    }
            }).catch(function (error){
                console.log(error);
            })
        }
        setDistricts(data);
    }, [cityURL])

    
    const clickMethod = async (value) => {
        setPayMethod(value)
    }
    
    const changeCity = async (value) => {
        if(value['city']){
            setCity(value['city']['value'])
            setCityURL(value['city']['path'])
        }
    }

    const changeDistrict = async (value) => {
        if(value['districts']){
            setDistrict(value['districts']['displayName'])
        }
    }

  return (
    <Container fluid style={{
        marginBottom:'20vh'
    }}>
      <Row>
        <h2>Giỏ hàng</h2>
    </Row>
    <hr />
    <Row>
        <Col xs={8}>
            <p>Tạm tính</p>
            <p>Giảm giá</p>
            <p>Phí giao hàng</p>
        </Col>
        <Col xs={4} style={{
            textAlign:'right'
        }}>
            <p>0đ</p>
            <p>0đ</p>
            <p>Miễn phí</p>
        </Col>
    </Row>
        <hr />
    <Row>
        <Col xs={8}>
            <p>Tổng</p>
        </Col>
        <Col xs={4}  style={{
            textAlign:'right'
        }}>
            <p>0đ</p>
        </Col>
    </Row>
    
    <Row>
    </Row>
    <Row>
        <h2>Thông tin vận chuyển</h2>
        <p>Bạn đã có tài khoản? Đăng nhập ngay</p>
    </Row>
    <Row style={{
        marginTop: '3vh',
        marginBottom: '3vh'
    }}>
        <Col xs={6} style={{
            paddingRight:'0',
        }}>
            <Form.Control
                style={{
                    borderRadius:'15px'
                }}
                type="text"
                placeholder='Họ tên'
            />
        </Col>
        <Col xs={6}>
            <Form.Control
                style={{
                    borderRadius:'15px',
                }}
                type="number"
                placeholder='Số điện thoại'
            />
        </Col>
        <Col xs={12} style={{
            marginTop:'10px'
        }}>
            <Form.Control
                style={{
                    borderRadius:'15px',
                }}
                type="email"
                placeholder='Email'
            />
        </Col>
        <Col xs={12} style={{
            marginTop:'10px'
        }}>
            <Form.Control
                style={{
                    borderRadius:'15px',
                }}
                type="text"
                placeholder='Địa chỉ(ví dụ: 123 Bạch Đằng, Phường 15)'
            />
        </Col>
        <Col xs={12} style={{
                marginTop:'2vh'        
            }}>
        <Picker
            label="Thành Phố"
            placeholder="Placeholder"
            mask
            maskClosable
            title="Thành Phố"
            action={{
                text: "Close",
                close: true,
            }}
            onChange={
                async (value) => {
                    changeCity(value)
                }
            }
            // disabled
            data={[
              {
                options: cities,
                name: "city",
              },
            ]}
          />

          <Picker
            label="Quận / Huyện"
            placeholder="Placeholder"
            mask
            maskClosable
            title="Quận / Huyện"
            action={{
              text: "Close",
              close: true,
            }}
            onChange={
                (value) => changeDistrict(value)
            }
            // disabled
            data={[
              {
                options: districts,
                name: "districts",
              },
            ]}
          />
        </Col>
        <Col xs={12}  style={{
                marginTop:'2vh'        
            }}>
            <Form.Control
                style={{
                    borderRadius:'15px',
                }}
                type="text"
                placeholder='Ghi chú thêm(Ví dụ: Giao hàng giờ hành chính)'
            />
        </Col>
    </Row>
    <Row>
        <h2>Hình thức thanh toán</h2>
    </Row>
    <Row>
        <div 
            style={{
                border: payMethod == 'cod' ? '1px solid red' : '',
                display:'flex'
            }}
            onClick={() => clickMethod('cod')}
            > <svg style={{
                marginLeft:'5vw',
                marginRight:'10vw'
            }} fill="black" height="40" width="40" version="1.1" id="Capa_1" viewBox="0 0 511 511" >
                <g>
                    <path d="M119.5,384c-4.142,0-7.5,3.358-7.5,7.5c0,9.098-7.402,16.5-16.5,16.5S79,400.598,79,391.5S86.402,375,95.5,375   c4.142,0,7.5-3.358,7.5-7.5s-3.358-7.5-7.5-7.5C78.131,360,64,374.131,64,391.5S78.131,423,95.5,423s31.5-14.131,31.5-31.5   C127,387.358,123.642,384,119.5,384z"/>
                    <path d="M439.5,384c-4.142,0-7.5,3.358-7.5,7.5c0,9.098-7.402,16.5-16.5,16.5s-16.5-7.402-16.5-16.5s7.402-16.5,16.5-16.5   c4.142,0,7.5-3.358,7.5-7.5s-3.358-7.5-7.5-7.5c-17.369,0-31.5,14.131-31.5,31.5s14.131,31.5,31.5,31.5s31.5-14.131,31.5-31.5   C447,387.358,443.642,384,439.5,384z"/>
                    <path d="M447.5,256h-16c-4.142,0-7.5,3.358-7.5,7.5s3.358,7.5,7.5,7.5h16c4.142,0,7.5-3.358,7.5-7.5S451.642,256,447.5,256z"/>
                    <path d="M327.5,320h-144c-4.142,0-7.5,3.358-7.5,7.5s3.358,7.5,7.5,7.5h144c4.142,0,7.5-3.358,7.5-7.5S331.642,320,327.5,320z"/>
                    <path d="M471.513,224H371.038l-68.199-82.764c-0.077-0.094-0.157-0.186-0.239-0.275c-6.198-6.817-14.583-11.219-23.6-12.537V95.5   c0-17.369-14.131-31.5-31.5-31.5H215v-0.5c0-4.142-3.358-7.5-7.5-7.5s-7.5,3.358-7.5,7.5V64h-41v-0.5c0-4.142-3.358-7.5-7.5-7.5   s-7.5,3.358-7.5,7.5V64h-32.5C94.131,64,80,78.131,80,95.5v32.537c-13.185,0.383-25.202,7.168-32.316,18.347   c-0.068,0.107-0.134,0.217-0.197,0.328L6.061,219.793C2.095,226.095,0,233.356,0,240.805V327.5   c0,15.285,9.017,29.334,22.972,35.791c2.002,0.927,4.312,0.925,6.311-0.006c1.829-0.85,3.221-2.4,3.894-4.285h7.798   C35.282,368.514,32,379.629,32,391.5c0,35.014,28.486,63.5,63.5,63.5s63.5-28.486,63.5-63.5c0-11.871-3.282-22.986-8.975-32.5   h7.775c0.19,0.718,0.375,1.437,0.54,2.162c0.776,3.415,3.812,5.838,7.313,5.838h179.691c3.502,0,6.538-2.423,7.313-5.838   c0.165-0.725,0.35-1.444,0.54-2.162h7.775c-5.693,9.514-8.975,20.629-8.975,32.5c0,35.014,28.486,63.5,63.5,63.5   s63.5-28.486,63.5-63.5c0-11.871-3.282-22.986-8.975-32.5h7.775c0.19,0.718,0.375,1.437,0.54,2.162   c0.776,3.415,3.812,5.838,7.313,5.838h1.823C500.448,367,511,356.447,511,343.477v-79.99C511,241.714,493.286,224,471.513,224z    M496,288h-8.5c-4.687,0-8.5-3.813-8.5-8.5s3.813-8.5,8.5-8.5h8.5V288z M304.563,166.916L351.602,224H116.042l24.522-45.65   C145.1,171.238,152.822,167,161.27,167H303.5C303.862,167,304.215,166.966,304.563,166.916z M247.5,79   c9.098,0,16.5,7.402,16.5,16.5V128h-49V79H247.5z M200,79v49h-41V79H200z M111.5,79H144v49H95V95.5C95,86.402,102.402,79,111.5,79z    M53.401,166.696c0.667,0.194,1.37,0.304,2.099,0.304h35.457l-24.535,45.671C61.896,219.769,54.187,224,45.754,224H20.918   L53.401,166.696z M95.5,440C68.757,440,47,418.243,47,391.5S68.757,343,95.5,343s48.5,21.757,48.5,48.5S122.243,440,95.5,440z    M137.579,344c-11.213-9.944-25.948-16-42.079-16s-30.866,6.056-42.079,16H39.29c11.21-19.986,32.578-33,56.21-33   c14.913,0,28.908,4.948,40.474,14.31c6.412,5.19,11.746,11.568,15.741,18.69H137.579z M415.5,440c-26.743,0-48.5-21.757-48.5-48.5   s21.757-48.5,48.5-48.5s48.5,21.757,48.5,48.5S442.243,440,415.5,440z M457.579,344c-11.213-9.944-25.948-16-42.079-16   s-30.866,6.056-42.079,16h-14.136c3.995-7.123,9.329-13.5,15.741-18.69C386.592,315.948,400.587,311,415.5,311   s28.908,4.948,40.474,14.31c6.412,5.19,11.746,11.568,15.741,18.69H457.579z M491.139,351.172   c-4.717-14.635-13.689-27.777-25.728-37.521C451.35,302.269,433.624,296,415.5,296s-35.85,6.269-49.911,17.651   c-12.266,9.928-21.347,23.382-25.99,38.349H171.401c-4.643-14.967-13.724-28.421-25.99-38.349C131.35,302.269,113.624,296,95.5,296   c-32.221,0-61.034,19.614-73.261,48.782C17.694,340.261,15,334.063,15,327.5V271h384.5c4.142,0,7.5-3.358,7.5-7.5   s-3.358-7.5-7.5-7.5H15v-15.195c0-0.611,0.026-1.22,0.071-1.826C15.214,238.986,15.355,239,15.5,239h30.254   c13.715,0,26.243-6.943,33.512-18.574c0.087-0.139,0.169-0.281,0.247-0.425l30.595-56.951c1.249-2.324,1.184-5.134-0.17-7.398   S106.139,152,103.5,152H62.113c4.661-5.68,11.587-9,19.062-9h192.127c6.858,0,13.44,2.887,18.086,7.926l0.885,1.074H161.27   c-13.729,0-26.271,6.951-33.547,18.594c-0.087,0.139-0.169,0.281-0.247,0.426l-30.582,56.931c-1.249,2.325-1.184,5.134,0.17,7.398   S100.861,239,103.5,239h264h104.013c10.891,0,20.141,7.149,23.312,17H487.5c-12.958,0-23.5,10.542-23.5,23.5s10.542,23.5,23.5,23.5   h8.5v40.477C496,346.866,494.011,349.8,491.139,351.172z"/>
                </g>
            </svg>
            <div>
                <span>COD</span>
                <p>Thanh toán khi nhận hàng</p>
            </div>
        </div>
        <div 
            style={{
                padding:'2vh',
                marginTop:'2vh',
                border: payMethod == 'momo' ? '1px solid red' : '',
                display:'flex'
            }}
            onClick={() => 
                {
                    clickMethod('momo')
                    navigate('../scanCode')
                }}
            > <svg style={{
                marginLeft:'5vw',
                marginRight:'10vw'
            }} viewBox="6.7169296377637995 5.309796557160162 81.4130703622362 74.62020344283985" width="40" height="40">
                <rect fill="#a50064" height="87" rx="12.06" width="96"/>
                <path d="M71 7.07c-9.45 0-17.11 7.36-17.11 16.43S61.57 39.93 71 39.93s17.13-7.36 17.13-16.43S80.47 7.07 71 7.07zm0 23.44a7.14 7.14 0 0 1-7.27-7 7.28 7.28 0 0 1 14.54 0 7.14 7.14 0 0 1-7.27 7zm-22-11.1V40h-9.88V19.31a2.9 2.9 0 0 0-5.8 0V40h-9.84V19.31a2.9 2.9 0 0 0-5.8 0V40H7.87V19.41A12.62 12.62 0 0 1 20.72 7.07a13.11 13.11 0 0 1 7.7 2.48 13.14 13.14 0 0 1 7.69-2.48A12.63 12.63 0 0 1 49 19.41zM71 47c-9.45 0-17.11 7.35-17.11 16.43S61.57 79.89 71 79.89s17.11-7.35 17.11-16.42S80.47 47 71 47zm0 23.44a7 7 0 1 1 7.27-7A7.14 7.14 0 0 1 71 70.48zM49 59.38v20.55h-9.88V59.27a2.9 2.9 0 0 0-5.8 0v20.66h-9.84V59.27a2.9 2.9 0 0 0-5.8 0v20.66H7.87V59.38A12.61 12.61 0 0 1 20.72 47a13.17 13.17 0 0 1 7.7 2.47A13.11 13.11 0 0 1 36.11 47 12.62 12.62 0 0 1 49 59.38z" fill="#fff"/>
            </svg>
            <div>
                <span>MOMO / BarCode</span>
            </div>
        </div>
        <div 
            style={{
                marginTop:'2vh',
                padding:'2vh',
                border: payMethod == 'zpay' ? '1px solid red' : '',
                display:'flex'
            }}
            onClick={() => clickMethod('zpay')}
            > <svg style={{
                marginLeft:'5vw',
                marginRight:'10vw'
            }} version="1.1" id="레이어_1" width="40" height="40" viewBox="0 0 339.544 97.26">
            <g>
                <path style={{fill:'#0FA8E0'}} d="M99.868,36.624c-1.334-1.362-3.028-2.047-5.088-2.047c-3.028,0-5.238,1.454-6.628,4.358   c-2.969-3.488-7.027-5.23-12.171-5.23c-6.176,0-11.372,2.384-15.58,7.148c-4.206,4.765-6.309,10.578-6.309,17.435   s2.103,12.668,6.309,17.435c4.208,4.766,9.404,7.147,15.58,7.147c5.144,0,9.202-1.742,12.171-5.232   c1.39,2.908,3.6,4.359,6.628,4.359c2.06,0,3.754-0.681,5.088-2.048c1.331-1.362,1.996-3.034,1.996-5.012v-33.3   C101.864,39.662,101.199,37.991,99.868,36.624 M85.109,66.545c-1.727,2.225-4.106,3.336-7.131,3.336   c-3.03,0-5.405-1.111-7.13-3.336c-1.724-2.228-2.588-4.979-2.588-8.258c0-3.277,0.864-6.029,2.588-8.256   c1.725-2.225,4.1-3.337,7.13-3.337c3.025,0,5.404,1.112,7.131,3.337c1.726,2.227,2.589,4.979,2.589,8.256   C87.698,61.565,86.835,64.317,85.109,66.545"/>
                <path style={{fill:'#0FA8E0'}} d="M117.905,79.949c-1.333,1.367-3.03,2.047-5.085,2.047c-2.061,0-3.757-0.68-5.088-2.047   c-1.334-1.364-1.999-3.037-1.999-5.013V15.344c0-1.975,0.665-3.648,1.999-5.013c1.331-1.366,3.027-2.047,5.088-2.047   c2.055,0,3.752,0.681,5.085,2.047c1.332,1.365,1.997,3.038,1.997,5.013v59.593C119.902,76.912,119.237,78.585,117.905,79.949"/>
                <path style={{fill:'#0FA8E0'}} d="M164.842,40.853c-4.54-4.764-10.323-7.148-17.349-7.148c-7.024,0-12.758,2.354-17.208,7.061   c-4.453,4.707-6.678,10.547-6.678,17.521c0,6.973,2.225,12.813,6.678,17.521c4.45,4.707,10.184,7.062,17.208,7.062   c7.026,0,12.809-2.382,17.349-7.147c4.36-4.651,6.54-10.462,6.54-17.435C171.382,51.313,169.203,45.503,164.842,40.853    M154.625,66.545c-1.727,2.225-4.104,3.336-7.132,3.336c-3.029,0-5.404-1.111-7.128-3.336c-1.727-2.228-2.59-4.979-2.59-8.258   c0-3.277,0.863-6.029,2.59-8.256c1.724-2.225,4.099-3.337,7.128-3.337c3.028,0,5.405,1.112,7.132,3.337   c1.726,2.227,2.586,4.979,2.586,8.256C157.211,61.565,156.352,64.317,154.625,66.545"/>
                <path style={{fill:'#0FA8E0'}} d="M46.249,35.354c5.004-6.458,7.509-10.809,7.509-13.048c0-5.18-3.26-7.77-9.781-7.77H9.584   c-2.702,0-4.792,0.639-6.275,1.915c-1.481,1.279-2.223,2.937-2.223,4.979c0,2.045,0.742,3.705,2.223,4.982   c1.483,1.277,3.573,1.915,6.275,1.915h23.621L2.964,67.4C0.988,69.957,0,72.223,0,74.203c0,5.68,3.756,8.521,11.265,8.521h35.477   c5.668,0,8.5-2.379,8.5-7.137c0-4.756-2.832-7.135-8.5-7.135H20.654L46.249,35.354z"/>
                <path style={{fill:'#32B34A'}} d="M216.824,28.195h-9.492v19.729h9.492c2.852,0,5.164-0.931,6.932-2.792s2.652-4.218,2.652-7.073   c0-2.852-0.885-5.211-2.652-7.072S219.675,28.195,216.824,28.195"/>
                <path style={{fill:'#32B34A'}} d="M264.18,46.75c-3.013,0-5.375,1.105-7.091,3.319c-1.715,2.215-2.574,4.95-2.574,8.21   c0,3.261,0.859,5.998,2.574,8.214c1.716,2.211,4.078,3.317,7.091,3.317c3.009,0,5.375-1.106,7.092-3.317   c1.718-2.216,2.575-4.953,2.575-8.214c0-3.26-0.857-5.995-2.575-8.21C269.555,47.854,267.189,46.75,264.18,46.75"/>
                <path style={{fill:'#32B34A'}} d="M331.232,0H193.625c-4.592,0-8.313,3.722-8.313,8.313v80.634c0,4.591,3.722,8.313,8.313,8.313   h108.631c-1.146-1.086-1.721-2.357-1.721-3.814c0-1.189,0.267-2.437,0.801-3.742l5.124-11.395l-14.168-35.376   c-0.416-1.009-0.623-2.108-0.623-3.297c0-1.544,0.653-2.852,1.96-3.921c1.307-1.069,2.673-1.603,4.1-1.603   c3.147,0,5.287,1.514,6.416,4.544l8.82,24.148l9.446-24.148c1.188-3.03,3.325-4.544,6.416-4.544c1.425,0,2.791,0.534,4.099,1.603   c1.305,1.069,1.961,2.377,1.961,3.921c0,1.189-0.21,2.288-0.625,3.297l-20.984,50.958c-0.574,1.424-1.266,2.545-2.071,3.369h20.026   c4.591,0,8.313-3.722,8.313-8.313V8.313C339.544,3.722,335.823,0,331.232,0 M234.039,54.252c-4.344,3.971-9.803,5.956-16.378,5.956   h-10.329v15.261c0,2.297-0.652,4.08-1.955,5.35c-1.303,1.273-2.979,1.908-5.023,1.908c-2.049,0-3.724-0.635-5.026-1.908   c-1.304-1.27-1.954-3.053-1.954-5.35V23.171c0-4.839,2.419-7.259,7.258-7.259h16.473c6.885,0,12.576,2.064,17.076,6.188   c4.496,4.127,6.745,9.478,6.745,16.053C240.924,44.792,238.628,50.156,234.039,54.252 M287.937,74.838   c0,1.966-0.662,3.628-1.985,4.984c-1.327,1.359-3.013,2.037-5.06,2.037c-3.013,0-5.211-1.442-6.593-4.336   c-2.954,3.471-6.989,5.203-12.106,5.203c-6.142,0-11.309-2.367-15.493-7.108c-4.185-4.739-6.276-10.521-6.276-17.341   c0-6.818,2.092-12.6,6.276-17.338c4.185-4.738,9.352-7.109,15.493-7.109c5.117,0,9.152,1.732,12.106,5.201   c1.382-2.888,3.58-4.334,6.593-4.334c2.047,0,3.732,0.681,5.06,2.036c1.323,1.361,1.985,3.022,1.985,4.986V74.838z"/>
            </g>
            </svg>
                <div>
                    <span>Ví điện tử ZaloPay</span>
                </div>
        </div>
    </Row>
    <hr />
    </Container>
  );
}

export default Cart;